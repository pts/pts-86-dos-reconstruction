#! /bin/sh --
set -ex
test "$0" = "${0%/*}" || cd "${0%/*}"

export PATH="../tools:$PATH"

# dosio.junk.asm and asm.junk.asm were generated manually.
# trans.junk.asm, chess.junk.asm, command.junk.asm and rdcpm.junk.asm were generated by this Perl script:
#   BEGIN { $^W = 1 }; use integer; use strict;
#   sub fmthex($) {
#     die if $_[0] < 0;
#     return "$_[0]" if $_[0] < 10;
#     my $s = sprintf("%X", $_[0]);
#     $s =~ s@^(?!\d)@0@;  # Add leading 0 if needed.
#     $s . "H"
#   }
#   sub gen_junk_asm(@) {
#     my $prefix = shift(@_);
#     my $is_text = shift(@_);
#     die if !open(B, "< ./$prefix.com.orig");
#     my $s = join("", <B>);
#     die if !close(B);
#     die if !open(F, "> ./$prefix.junk.asm");
#     for my $pair (@_) {
#       my($a, $b) = @$pair;
#       die if $a > $b;
#       --$a; --$b;
#       my $ls = length($s);
#       my $dbargs;
#       if ($is_text) {
#         $dbargs = substr($s, $a, $b + 1 - $a);
#         $dbargs =~ s@([^ !-~\x27])@ sprintf("\x27,%s,\x27", fmthex(ord($1))) @ge;
#         $dbargs =~ s@,\x27\x27(?=,)@@g;
#         $dbargs = "\x27$dbargs\x27";
#         $dbargs =~ s@\A\x27\x27,@@; $dbargs =~ s@,\x27\x27\Z(?!\n)@@;
#       } else {
#         $dbargs = join(",", map { fmthex(vec($s, $_, 8)) } $a .. $b);
#       }
#       die if !printf(F " PUT %s\r\n DB %s\r\n", fmthex($a + 0x100), $dbargs);
#     }
#     die if !print(F " PUT 100H\r\n");
#     die if !close(F);
#   }
#   gen_junk_asm("trans", 0, [3083, 3087]);
#   gen_junk_asm("chess", 1, [101, 163], [179, 253], [321, 384], [437, 556], [648, 3072]);
#   gen_junk_asm("command", 1, [808, 849], [948, 1129]);
#   gen_junk_asm("rdcpm", 1, [481, 770]);

nasm -w+orphan-labels -f bin -O0 -o asm244i ../asm244l.nasm
chmod +x asm244i
rm -f ./*.bin ./*.com ./*.sys
./asm244i 86dos.asm
mv 86dos.bin 86dos.sys
cmp 86dos.sys 86dos.sys.orig
./asm244i boot.asm
mv boot.bin boot.com
cmp boot.com.orig boot.com
for f in edlin.asm hex2bin.asm sys.asm; do
  ./asm244i "$f"
  cmp "${f%.*}.com.orig" "${f%.*}.com"
done
for f in dosio.asm asm.asm chess.asm command.asm rdcpm.asm trans.asm; do
  ./asm244i "$f"
  cat "${f%.*}.junk.asm" "$f" >"${f%.*}_.asm"  # Concatenate with junk.
  ./asm244i "${f%.*}_.asm"
  rm -f "${f%.*}_.asm"
  if test "$f" = dosio.asm; then
    mv dosio.bin dosio.com
    cmp dosio.com.nojunk.orig dosio.com
    mv dosio_.bin dosio_.com
    cmp dosio.com.orig dosio_.com
  else
    cmp "${f%.*}.com.orig" "${f%.*}_.com"
  fi
done
nasm -w+orphan-labels -f bin -O0 -DNO_JUNK -o 86dos011_nojunk.img 86dos011.nasm
nasm -w+orphan-labels -f bin -O0 -o 86dos011.img 86dos011.nasm
if test -f '86-DOS Version 0.1-C - Serial #11 (ORIGINAL DISK).img'; then
  cmp '86-DOS Version 0.1-C - Serial #11 (ORIGINAL DISK).img' 86dos011.img
fi

: "$0" OK.
